{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhinav\\\\OneDrive\\\\Desktop\\\\t3\\\\Excel-export-import\\\\src\\\\ExcelImport.js\";\nimport React, { useState } from 'react';\nimport { ExcelRenderer } from 'react-excel-renderer';\nconst ExcelImport = _ref => {\n  let {\n    uploadHandler\n  } = _ref;\n  const [errorMessage, setErrorMessage] = useState('');\n  const [previewData, setPreviewData] = useState(null);\n  const fileHandler = event => {\n    let fileObj = event.target.files[0];\n    if (!fileObj) {\n      setErrorMessage('No file uploaded!');\n      return;\n    }\n    if (!(fileObj.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || fileObj.type === 'application/vnd.ms-excel')) {\n      setErrorMessage('Unknown file format. Only Excel files are supported.');\n      return;\n    }\n    ExcelRenderer(fileObj, (err, resp) => {\n      if (err) {\n        console.error(err);\n        setErrorMessage('Error reading file');\n      } else {\n        const {\n          rows\n        } = resp;\n        const headers = rows[0];\n        const data = rows.slice(1).map(row => {\n          let obj = {};\n          headers.forEach((header, index) => {\n            obj[header] = row[index];\n          });\n          return obj;\n        });\n        setPreviewData({\n          headers,\n          rows: rows.slice(1)\n        });\n        uploadHandler(data);\n      }\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"excel-import-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Import Excel File\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    onChange: fileHandler,\n    accept: \".xlsx, .xls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  })), errorMessage && /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: 'red'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }\n  }, errorMessage), previewData && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"excel-table-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"excel-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 15\n    }\n  }, previewData.headers.map((header, index) => /*#__PURE__*/React.createElement(\"th\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, header)))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, previewData.rows.map((row, rowIndex) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: rowIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, row.map((cell, cellIndex) => /*#__PURE__*/React.createElement(\"td\", {\n    key: cellIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, cell))))))));\n};\nexport default ExcelImport;","map":{"version":3,"names":["React","useState","ExcelRenderer","ExcelImport","_ref","uploadHandler","errorMessage","setErrorMessage","previewData","setPreviewData","fileHandler","event","fileObj","target","files","type","err","resp","console","error","rows","headers","data","slice","map","row","obj","forEach","header","index","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onChange","accept","style","color","key","rowIndex","cell","cellIndex"],"sources":["C:/Users/abhinav/OneDrive/Desktop/t3/Excel-export-import/src/ExcelImport.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ExcelRenderer } from 'react-excel-renderer';\r\n\r\nconst ExcelImport = ({ uploadHandler }) => {\r\n  const [errorMessage, setErrorMessage] = useState('');\r\n  const [previewData, setPreviewData] = useState(null);\r\n\r\n  const fileHandler = (event) => {\r\n    let fileObj = event.target.files[0];\r\n    \r\n    if (!fileObj) {\r\n      setErrorMessage('No file uploaded!');\r\n      return;\r\n    }\r\n\r\n    if (!(fileObj.type === 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' || fileObj.type === 'application/vnd.ms-excel')) {\r\n      setErrorMessage('Unknown file format. Only Excel files are supported.');\r\n      return;\r\n    }\r\n\r\n    ExcelRenderer(fileObj, (err, resp) => {\r\n      if (err) {\r\n        console.error(err);\r\n        setErrorMessage('Error reading file');\r\n      } else {\r\n        const { rows } = resp;\r\n        const headers = rows[0];\r\n        const data = rows.slice(1).map(row => {\r\n          let obj = {};\r\n          headers.forEach((header, index) => {\r\n            obj[header] = row[index];\r\n          });\r\n          return obj;\r\n        });\r\n        setPreviewData({ headers, rows: rows.slice(1) });\r\n        uploadHandler(data);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"excel-import-container\">\r\n      <h2>Import Excel File</h2>\r\n      <div className=\"file-upload\">\r\n        <input\r\n          type=\"file\"\r\n          onChange={fileHandler}\r\n          accept=\".xlsx, .xls\"\r\n        />\r\n      </div>\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      \r\n      {previewData && (\r\n        <div className=\"excel-table-wrapper\">\r\n          <table className=\"excel-table\">\r\n            <thead>\r\n              <tr>\r\n                {previewData.headers.map((header, index) => (\r\n                  <th key={index}>{header}</th>\r\n                ))}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {previewData.rows.map((row, rowIndex) => (\r\n                <tr key={rowIndex}>\r\n                  {row.map((cell, cellIndex) => (\r\n                    <td key={cellIndex}>{cell}</td>\r\n                  ))}\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExcelImport;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}